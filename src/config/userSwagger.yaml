paths:
  /users:
    get:
      summary: Retrieve a list of users
      tags: [Users]
      responses:
        200:
          description: A list of users.
    
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                memo:
                  type: string
      responses:
        201:
          description: User created successfully

  /users/{id}:
    get:
      summary: Retrieve a single user by ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single user.
    
    patch:
      summary: Update a user's information
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                memo:
                  type: string
      responses:
        200:
          description: User information updated successfully
        401:
          description: Authentication failed
        403:
          description: Permission denied
    
    delete:
      summary: Delete a user by ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        204:
          description: User deleted successfully
        401:
          description: Authentication failed
        403:
          description: Permission denied

  /users/login:
    post:
      summary: User Login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@example.com
                password:
                  type: string
                  format: password
                  example: yourpassword123
      responses:
        200:
          description: Login successful. Access token returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string

  /users/me:
    get:
      summary: 현재 로그인한 사용자의 정보 조회
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 현재 로그인한 사용자의 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 사용자 고유 ID
                  name:
                    type: string
                    description: 사용자 이름
                  email:
                    type: string
                    format: email
                    description: 사용자 이메일
                  memo:
                    type: string
                    description: 사용자 메모
                  is_active:
                    type: boolean
                    description: 계정 활성화 상태
                  created_at:
                    type: string
                    format: date-time
                    description: 계정 생성일
                  updated_at:
                    type: string
                    format: date-time
                    description: 최종 수정일
        401:
          description: 인증되지 않은 사용자
        404:
          description: 사용자를 찾을 수 없음
          
  /users/logout:
    post:
      summary: 사용자 로그아웃
      tags:
        - Auth
      responses:
        200:
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그아웃 성공"

  /users/refresh:
    post:
      summary: 액세스 토큰 갱신
      tags:
        - Auth
      responses:
        200:
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "토큰 갱신 성공"
                  access_token:
                    type: string
                    description: 새로 발급된 액세스 토큰
                  refresh_token:
                    type: string
                    description: 새로 발급된 리프레시 토큰
        401:
          description: 리프레시 토큰 만료 또는 유효하지 않음  

  /users/csrf-token:
    get:
      summary: CSRF 토큰 발급
      tags:
        - Auth
      responses:
        200:
          description: CSRF 토큰 발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrfToken:
                    type: string
                    description: CSRF 보호를 위한 토큰
                    example: "abc123xyz789"
